#include 'function.ch'
#include 'dict_error.ch'

#require 'hbsqlit3'

// 28.03.23
function dlo_lgota(db, source)
  // Классификатор кодов льгот по ДЛО
  //  1 - NAME(C)  2 - KOD(C)

  local stmt, stmtTMP
  local cmdText, cmdTextTMP
  local k, j
  local oXmlDoc, oXmlNode, oNode1, oNode2
  local mKod, mName
  local mArr := {}

  aadd(mArr, {'000 --- без льготы ---', '   '})
  aadd(mArr, {'010 Инвалиды войны', '010'})
  aadd(mArr, {'011 Участники Великой Отечественной войны, ставшие инвалидами', '011'})
  aadd(mArr, {'012 Военнослужащие органов внутренних дел, Государственной противопожарной службы, учреждений и органов уголовно-исполнительной системы, ставших инвалидами вследствие ранения, контузии или увечья, полученных при исполнении обязанностей военной службы', '012'})
  aadd(mArr, {'020 Участники Великой Отечественной войны', '020'})
  aadd(mArr, {'030 Ветераны боевых действий', '030'})
  aadd(mArr, {'040 Военнослужащие, проходившие военную службу в воинских частях, не входивших в состав действующей армии, в период с 22 июня 1941 года по 3 сентября 1945 года не менее шести месяцев, военнослужащие, награжденные орденами или медалями СССР', '040'})
  aadd(mArr, {'050 Лица, награжденные знаком "Жителю блокадного Ленинграда"', '050'})
  aadd(mArr, {'060 Члены семей погибших (умерших) инвалидов войны, участников Великой Отечественной войны и ветеранов боевых действий', '060'})
  aadd(mArr, {'061 Члены семей погибших в Великой Отечественной войне лиц из числа личного состава групп самозащиты объектовых и аварийных команд местной противовоздушной обороны, а также члены семей погибших работников госпиталей и больниц города Ленинграда', '061'})
  aadd(mArr, {'062 Члены семей военнослужащих органов внутренних дел, Государственной противопожарной службы, учреждений и органов уголовно-исполнительной системы и органов государственной безопасности, погибших при исполнении обязанностей военной службы', '062'})
  aadd(mArr, {'063 Члены семей военнослужащих, погибших в плену, признанных в установленном порядке пропавшими без вести в районах боевых действий', '063'})
  aadd(mArr, {'081 Инвалиды I степени', '081'})
  aadd(mArr, {'082 Инвалиды II степени', '082'})
  aadd(mArr, {'083 Инвалиды III степени', '083'})
  aadd(mArr, {'084 Дети-инвалиды', '084'})
  aadd(mArr, {'085 Инвалиды, не имеющие степени ограничения способности к трудовой деятельности', '085'})
  aadd(mArr, {'091 Граждане, получившие или перенесшие лучевую болезнь и другие заболевания, связанные с радиационным воздействием вследствие чернобыльской катастрофы или с работами по ликвидации последствий катастрофы на Чернобыльской АЭС', '091'})
  aadd(mArr, {'092 Инвалиды вследствие чернобыльской катастрофы', '092'})
  aadd(mArr, {'093 Граждане, принимавшие в 1986-1987 годах участие в работах по ликвидации последствий чернобыльской катастрофы', '093'})
  aadd(mArr, {'094 Граждане, принимавшие участие в 1988-90гг. участие в работах по ликвидации последствий чернобыльской катастрофы', '094'})
  aadd(mArr, {'095 Граждане, постоянно проживающие (работающие) на территории зоны проживания с правом на отселение', '095'})
  aadd(mArr, {'096 Граждане, постоянно проживающие (работающие) на территории зоны проживания с льготным социально-экономическим статусом', '096'})
  aadd(mArr, {'097 Граждане, постоянно проживающие (работающие) в зоне отселения до их переселения в другие районы', '097'})
  aadd(mArr, {'098 Граждане, эвакуированные (в том числе выехавшие добровольно) в 1986 году из зоны отчуждения', '098'})
  aadd(mArr, {'099 Дети и подростки в возрасте до 18 лет, проживающие в зоне отселения и зоне проживания с правом на отселение, эвакуированные и переселенные из зон отчуждения, отселения, проживания с правом на отселение', '099'})
  aadd(mArr, {'100 Дети и подростки в возрасте до 18 лет, постоянно проживающие в зоне с льготным социально-экономическим статусом', '100'})
  aadd(mArr, {'101 Дети и подростки, страдающие болезнями вследствие чернобыльской катастрофы, ставшие инвалидами', '101'})
  aadd(mArr, {'102 Дети и подростки, страдающие болезнями вследствие чернобыльской катастрофы', '102'})
  aadd(mArr, {'111 Граждане, получившие суммарную (накопительную) эффективную дозу облучения, превышающую 25 сЗв (бэр)', '111'})
  aadd(mArr, {'112 Граждане, получившие суммарную (накопительную) эффективную дозу облучения более 5 сЗв (бэр), но не превышающую 25 сЗв (бэр)', '112'})
  aadd(mArr, {'113 Дети в возрасте до 18 лет первого и второго поколения граждан, получившие суммарную (накопительную) эффективную дозу облучения более 5 сЗв (бэр), страдающих заболеваниями вследствие радиационного воздействия на одного из родителей', '113'})
  aadd(mArr, {'120 Лица, работавшие в период Великой Отечественной войны на объектах противовоздушной обороны, на строительстве оборонительных сооружений, военно-морских баз, аэродромов и других военных объектов', '120'})
  aadd(mArr, {'121 Граждане, получившие лучевую болезнь, обусловленную воздействием радиации вследствие аварии в 1957 году на производственном объединении "Маяк" и сбросов радиоактивных отходов в реку Теча', '121'})
  aadd(mArr, {'122 Граждане, ставшие инвалидами в результате воздействия радиации вследствие аварии в 1957 году на производственном объединении "Маяк" и сбросов радиоактивных отходов в реку Теча', '122'})
  aadd(mArr, {'123 Граждане, принимавшие в 1957-58гг. участие в работах по ликвидации последствий аварии в 1957 году на производственном объединении "Маяк", а также граждане, занятые на работах по проведению мероприятий вдоль реки Теча в 1949-56гг.', '123'})
  aadd(mArr, {'124 Граждане, принимавшие в 1959-61гг. участие в работах по ликвидации последствий аварии в 1957 году на производственном объединении "Маяк", а также граждане, занятые на работах по проведению мероприятий вдоль реки Теча в 1957-62гг.', '124'})
  aadd(mArr, {'125 Граждане, проживающие в населенных пунктах, подвергшихся радиоактивному загрязнению вследствие аварии в 1957 году на производственном объединении "Маяк" и сбросов радиоактивных отходов в реку Теча', '125'})
  aadd(mArr, {'128 Граждане, эвакуированные из населенных пунктов, подвергшихся радиоактивному загрязнению вследствие аварии в 1957 году на производственном объединении "Маяк" и сбросов радиоактивных отходов в реку Теча', '128'})
  aadd(mArr, {'129 Дети первого и второго поколения граждан, указанных в статье 1 Федерального закона от 26.11.98 № 175-ФЗ, страдающие заболеваниями вследствие воздействия радиации на их родителей', '129'})
  aadd(mArr, {'131 Граждане из подразделений особого риска, не имеющие инвалидности', '131'})
  aadd(mArr, {'132 Граждане из подразделений особого риска, имеющие инвалидность', '132'})
  aadd(mArr, {'140 Бывшие несовершеннолетние узники концлагерей, признанные инвалидами вследствие общего заболевания, трудового увечья и других причин (за исключением лиц, инвалидность которых наступила вследствие их противоправных действий)', '140'})
  aadd(mArr, {'141 Рабочие и служащие, а также военнослужащих органов внутренних дел, Государственной противопожарной службы, получившие профессиональные заболевания, связанные с лучевым воздействием на работах в зоне отчуждения', '141'})
  aadd(mArr, {'142 Рабочие и служащие, а также военнослужащие органов внутренних дел, Государственной противопожарной службы, получивших профессиональные заболевания, связанные с лучевым воздействием на работах в зоне отчуждения, ставшие инвалидами', '142'})
  aadd(mArr, {'150 Бывшие несовершеннолетние узники концлагерей', '150'})

  cmdText := 'CREATE TABLE dlo_lgota(kod TEXT(3), name TEXT)'

  OutStd(hb_eol() + 'Классификатор кодов льгот по ДЛО' + hb_eol())

  if sqlite3_exec(db, 'DROP TABLE if EXISTS dlo_lgota') == SQLITE_OK
    OutStd('DROP TABLE dlo_lgota - Ok' + hb_eol())
  endif

  if sqlite3_exec(db, cmdText) == SQLITE_OK
    OutStd('CREATE TABLE dlo_lgota - Ok' + hb_eol() )
  else
    OutStd('CREATE TABLE dlo_lgota - False' + hb_eol() )
    return nil
  endif

  cmdText := 'INSERT INTO dlo_lgota (kod, name) VALUES( :kod, :name )'
  for k := 1 to len(mArr)
    stmt := sqlite3_prepare(db, cmdText)
    mKod := mArr[k, 2]
    mName := mArr[k, 1]
    if sqlite3_bind_text(stmt, 1, mKod) == SQLITE_OK .AND. ;
      sqlite3_bind_text(stmt, 2, mName) == SQLITE_OK
      if sqlite3_step(stmt) != SQLITE_DONE
        // out_error('Ошибка к = ', k)
      endif
    endif
    sqlite3_reset(stmt)
  next
  sqlite3_clear_bindings(stmt)
  sqlite3_finalize(stmt)

  out_obrabotka_eol()
  return nil
